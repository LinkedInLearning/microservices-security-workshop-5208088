version: '3'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "8004:8004"
    volumes:
      - ./shared:/app/shared
    environment:
      # In production, this would be stored in a secrets manager like AWS Secrets Manager, HashiCorp Vault, or Kubernetes Secrets
      - JWT_SECRET_KEY=your-super-secret-key-that-should-be-in-secrets-manager
    networks:
      - insecure-microservices

  planet-service:
    build: ./planet-service
    ports:
      - "8000:8000"
    volumes:
      - ./shared:/app/shared
    environment:
      # In production, this would be stored in a secrets manager like AWS Secrets Manager, HashiCorp Vault, or Kubernetes Secrets
      - JWT_SECRET_KEY=your-super-secret-key-that-should-be-in-secrets-manager
    networks:
      - insecure-microservices

  destruction-service:
    build: ./destruction-service
    ports:
      - "8001:8001"
    volumes:
      - ./shared:/app/shared
    environment:
      - PLANET_SERVICE_URL=http://planet-service:8000
      # In production, this would be stored in a secrets manager like AWS Secrets Manager, HashiCorp Vault, or Kubernetes Secrets
      - JWT_SECRET_KEY=your-super-secret-key-that-should-be-in-secrets-manager
    networks:
      - insecure-microservices

  creation-service:
    build: ./creation-service
    ports:
      - "8002:8002"
    volumes:
      - ./shared:/app/shared
    environment:
      - PLANET_SERVICE_URL=http://planet-service:8000
      # In production, this would be stored in a secrets manager like AWS Secrets Manager, HashiCorp Vault, or Kubernetes Secrets
      - JWT_SECRET_KEY=your-super-secret-key-that-should-be-in-secrets-manager
    networks:
      - insecure-microservices

  auth-service:
    build: ./auth-service
    ports:
      - "8003:8003"
    volumes:
      - ./shared:/app/shared
    environment:
      # In production, this would be stored in a secrets manager like AWS Secrets Manager, HashiCorp Vault, or Kubernetes Secrets
      - JWT_SECRET_KEY=your-super-secret-key-that-should-be-in-secrets-manager
    networks:
      - insecure-microservices

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_GATEWAY_URL=http://localhost:8004
    networks:
      - insecure-microservices

networks:
  insecure-microservices:
    driver: bridge 